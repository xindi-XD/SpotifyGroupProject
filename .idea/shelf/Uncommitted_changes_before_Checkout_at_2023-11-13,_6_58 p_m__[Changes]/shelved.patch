Index: src/data_access/AuthorizationTokenAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;public class AuthorizationTokenAccessObject {\n}\n
===================================================================
diff --git a/src/data_access/AuthorizationTokenAccessObject.java b/src/data_access/AuthorizationTokenAccessObject.java
--- a/src/data_access/AuthorizationTokenAccessObject.java	
+++ b/src/data_access/AuthorizationTokenAccessObject.java	
@@ -1,2 +1,45 @@
-package data_access;public class AuthorizationTokenAccessObject {
+package data_access;
+
+import okhttp3.*;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.util.Base64;
+
+public class AuthorizationTokenAccessObject {
+    private static final String API_URL = "https://accounts.spotify.com/api/token";
+    private static final String CLIENT_ID = System.getenv("CLIENT_ID");
+    private static final String CLIENT_SECRET = System.getenv("CLIENT_SECRET");
+
+    public String[] generateAuthToken() {
+        //generates Auth Token using client credentials
+        //returned in {token, expiry (seconds)} format if successful
+        OkHttpClient client = new OkHttpClient().newBuilder().build();
+
+        MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded");
+        JSONObject requestBody = new JSONObject();
+        requestBody.put("grant_type", "client_credentials");
+        RequestBody body = RequestBody.create(requestBody.toString(), mediaType);
+        Request request = new Request.Builder()
+                .url(API_URL)
+                .method("POST", body)
+                .addHeader("Authorization", "Basic " + Base64.getEncoder().encodeToString((CLIENT_ID + ":" + CLIENT_SECRET).getBytes()))
+                .addHeader("Content-Type", "application/x-www-form-urlencoded")
+                .build();
+        try {
+            Response response = client.newCall(request).execute();
+            System.out.println(response);
+            JSONObject responseBody = new JSONObject(response.body().string());
+            if (response.code() == 200) {
+                return new String[]{responseBody.getString("access_token"), Integer.toString(responseBody.getInt("expires_in"))};
+            }
+            else {
+                return new String[]{"Error fetching Auth Token"};
+            }
+        }
+        catch (IOException | JSONException e) {
+            throw new RuntimeException(e);
+        }
+    }
 }
