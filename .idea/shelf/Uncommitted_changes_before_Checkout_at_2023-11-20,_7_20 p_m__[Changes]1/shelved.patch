Index: Spotify.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module version=\"4\">\n  <component name=\"AdditionalModuleElements\">\n    <content url=\"file://$MODULE_DIR$\" dumb=\"true\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Spotify.iml b/Spotify.iml
--- a/Spotify.iml	
+++ b/Spotify.iml	
@@ -1,8 +1,41 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module version="4">
+<module external.linked.project.id="$MODULE_DIR$/pom.xml" external.system.module.type="SINGLE_MODULE" external.system.module.version="223-2" org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
   <component name="AdditionalModuleElements">
     <content url="file://$MODULE_DIR$" dumb="true">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
   </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_20">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.json:json:20230618" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:4.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio-jvm:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.6.20" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains:annotations:13.0" level="project" />
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
 </module>
\ No newline at end of file
Index: src/interface_adapter/search_song/SearchSongViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.search_song;\n\nimport interface_adapter.homepage.HomepageViewModel;\n\n//eva writing this one\npublic class SearchSongViewModel extends ViewModel {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/search_song/SearchSongViewModel.java b/src/interface_adapter/search_song/SearchSongViewModel.java
--- a/src/interface_adapter/search_song/SearchSongViewModel.java	
+++ b/src/interface_adapter/search_song/SearchSongViewModel.java	
@@ -1,7 +1,23 @@
 package interface_adapter.search_song;
 
+import interface_adapter.ViewModel;
 import interface_adapter.homepage.HomepageViewModel;
 
+import java.beans.PropertyChangeListener;
+
 //eva writing this one
 public class SearchSongViewModel extends ViewModel {
+    public SearchSongViewModel(String viewName) {
+        super(viewName);
+    }
+
+    @Override
+    public void firePropertyChanged() {
+
+    }
+
+    @Override
+    public void addPropertyChangeListener(PropertyChangeListener listener) {
+
+    }
 }
Index: src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.delete_playlist;\n\nimport interface_adapter.ViewModel;\nimport interface_adapter.homepage.HomepageViewModel;\n\npublic class DeletePlaylistViewModel extends ViewModel {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java b/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java
--- a/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java	
+++ b/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java	
@@ -3,5 +3,20 @@
 import interface_adapter.ViewModel;
 import interface_adapter.homepage.HomepageViewModel;
 
+import java.beans.PropertyChangeListener;
+
 public class DeletePlaylistViewModel extends ViewModel {
+    public DeletePlaylistViewModel(String viewName) {
+        super(viewName);
+    }
+
+    @Override
+    public void firePropertyChanged() {
+
+    }
+
+    @Override
+    public void addPropertyChangeListener(PropertyChangeListener listener) {
+
+    }
 }
Index: test/APITest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/APITest.java b/test/APITest.java
new file mode 100644
--- /dev/null	
+++ b/test/APITest.java	
@@ -0,0 +1,11 @@
+import data_access.APIDataAccessObject;
+import org.junit.Test;
+import static org.junit.Assert.assertEquals;
+
+public class APITest {
+    @Test
+    public void testGetMe() {
+        APIDataAccessObject apiDataAccessObject = new APIDataAccessObject();
+        assertEquals(apiDataAccessObject.getMe(), "Une");
+    }
+}
