Index: Spotify.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module version=\"4\">\n  <component name=\"AdditionalModuleElements\">\n    <content url=\"file://$MODULE_DIR$\" dumb=\"true\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Spotify.iml b/Spotify.iml
--- a/Spotify.iml	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/Spotify.iml	(date 1700526102006)
@@ -1,8 +1,42 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module version="4">
+<module external.linked.project.id="$MODULE_DIR$/pom.xml" external.system.module.type="SINGLE_MODULE" external.system.module.version="223-2" org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
   <component name="AdditionalModuleElements">
     <content url="file://$MODULE_DIR$" dumb="true">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
   </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_20">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.json:json:20230618" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:4.10.0" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio-jvm:3.0.0" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.5.31" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.6.20" level="project" />
+    <orderEntry type="library" name="Maven: org.jetbrains:annotations:13.0" level="project" />
+    <orderEntry type="module-library" scope="TEST">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
 </module>
\ No newline at end of file
Index: test/APITest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import data_access.APIDataAccessObject;\nimport org.junit.Test;\nimport static org.junit.Assert.assertEquals;\n\npublic class APITest {\n    @Test\n    public void testGetMe() {\n        APIDataAccessObject apiDataAccessObject = new APIDataAccessObject();\n        assertEquals(apiDataAccessObject.getMe(), \"Une\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/APITest.java b/test/APITest.java
--- a/test/APITest.java	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/test/APITest.java	(date 1700531830258)
@@ -3,9 +3,5 @@
 import static org.junit.Assert.assertEquals;
 
 public class APITest {
-    @Test
-    public void testGetMe() {
-        APIDataAccessObject apiDataAccessObject = new APIDataAccessObject();
-        assertEquals(apiDataAccessObject.getMe(), "Une");
-    }
+
 }
Index: src/app/HomepageUseCaseFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\n\nimport interface_adapter.ViewManagerModel;\nimport interface_adapter.create_playlist.CreatePlaylistViewModel;\nimport interface_adapter.homepage.HomepageViewModel;\nimport view.HomepageView;\n\npublic class HomepageUseCaseFactory {\n    private HomepageUseCaseFactory(){}\n\n    public static HomepageView create(ViewManagerModel viewManagerModel,\n                                      HomepageViewModel homepageViewModel,\n                                      CreatePlaylistViewModel createPlaylistViewModel,\n                                      FileDataAccessObject fileDataAccessObject){\n        return new HomepageView(homepageViewModel, createPlaylistViewModel, viewManagerModel);\n    }\n\n//    private static HomepageController createHomepageUseCase(\n//            ViewManagerModel viewManagerModel,\n//            CreatePlaylistViewModel createPlaylistViewModel,\n//            HomepageViewModel homepageViewModel,\n//            CreatePlaylistDataAccessInterface createPlaylistDataAccessObject) throws IOException {\n//\n//        // Notice how we pass this method's parameters to the Presenter.\n//        // TODO: Homepage Presenter not implemented.\n//        HomepageOutputBoundary homepageOutputBoundary = new HomepagePresenter();\n//        // TODO: Incomplete method. Missing factory and DAO.\n//        CreatePlaylistInputBoundary createPlaylistInteractor = new CreatePlaylistInteractor(createPlaylistDataAccessObject, createPlaylistOutputBoundary);\n//        return new HomepageController(homepageInteractor);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/HomepageUseCaseFactory.java b/src/app/HomepageUseCaseFactory.java
--- a/src/app/HomepageUseCaseFactory.java	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/src/app/HomepageUseCaseFactory.java	(date 1700526136781)
@@ -7,7 +7,7 @@
 
 public class HomepageUseCaseFactory {
     private HomepageUseCaseFactory(){}
-
+/*
     public static HomepageView create(ViewManagerModel viewManagerModel,
                                       HomepageViewModel homepageViewModel,
                                       CreatePlaylistViewModel createPlaylistViewModel,
@@ -26,5 +26,5 @@
 //        HomepageOutputBoundary homepageOutputBoundary = new HomepagePresenter();
 //        // TODO: Incomplete method. Missing factory and DAO.
 //        CreatePlaylistInputBoundary createPlaylistInteractor = new CreatePlaylistInteractor(createPlaylistDataAccessObject, createPlaylistOutputBoundary);
-//        return new HomepageController(homepageInteractor);
+//        return new HomepageController(homepageInteractor);*/
 }
Index: src/app/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\n\nimport interface_adapter.ViewManagerModel;\nimport interface_adapter.create_playlist.CreatePlaylistViewModel;\nimport interface_adapter.homepage.HomepageViewModel;\nimport view.CreatePlaylistView;\nimport view.HomepageView;\nimport view.ViewManager;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        // TODO: API call commented out for only view transition.\n//        APIDataAccessObject spot = new APIDataAccessObject();\n//        //System.out.println(spot.getData(\"11vYnWjFxgXBgw2aC6Rb8\"));\n//        System.out.println(spot.getMe());\n\n        JFrame application = new JFrame(\"Spotify Example\");\n        application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n\n        CardLayout cardLayout = new CardLayout();\n\n        // The various View objects. Only one view is visible at a time.\n        JPanel views = new JPanel(cardLayout);\n        application.add(views);\n\n        // This keeps track of and manages which view is currently showing.\n        ViewManagerModel viewManagerModel = new ViewManagerModel();\n        new ViewManager(views, cardLayout, viewManagerModel);\n\n        // The data for the views, such as playlists and songs, are in the ViewModels.\n        // This information will be changed by a presenter object that is reporting the\n        // results from the use case. The ViewModels are observable, and will\n        // be observed by the Views.\n        // TODO: more VMs to be added.\n        HomepageViewModel homepageViewModel = new HomepageViewModel();\n        CreatePlaylistViewModel createPlaylistViewModel = new CreatePlaylistViewModel();\n        // TODO: DAO not correctly named, nor initialized, remove \"= null\" when initialized.\n        FileDataAccessObject playlistDataAccessObject = null;\n        // TODO: DAO not implemented.\n//        try {\n//            fileDataAccessObject = new FileDataAccessObject(\"./users.csv\", new CommonUserFactory());\n//        } catch (IOException e) {\n//            throw new RuntimeException(e);\n        HomepageView homepageView = HomepageUseCaseFactory.create(viewManagerModel, homepageViewModel, createPlaylistViewModel, playlistDataAccessObject);\n        views.add(homepageView, homepageView.viewName);\n        CreatePlaylistView createPlaylistView = CreatePlaylistUseCaseFactory.create(viewManagerModel, homepageViewModel, createPlaylistViewModel, playlistDataAccessObject);\n        views.add(createPlaylistView, createPlaylistView.viewName);\n\n        viewManagerModel.setActiveView(homepageView.viewName);\n        viewManagerModel.firePropertyChanged();\n\n        application.pack();\n        application.setVisible(true);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/Main.java b/src/app/Main.java
--- a/src/app/Main.java	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/src/app/Main.java	(date 1700531820773)
@@ -6,16 +6,17 @@
 import view.CreatePlaylistView;
 import view.HomepageView;
 import view.ViewManager;
-
+import data_access.APIDataAccessObject;
 import javax.swing.*;
 import java.awt.*;
 
 public class Main {
     public static void main(String[] args) {
+/*
         // TODO: API call commented out for only view transition.
-//        APIDataAccessObject spot = new APIDataAccessObject();
-//        //System.out.println(spot.getData("11vYnWjFxgXBgw2aC6Rb8"));
-//        System.out.println(spot.getMe());
+        APIDataAccessObject spot = new APIDataAccessObject();
+        System.out.println(APIDataAccessObject.getApiToken());
+        System.out.println(spot.getMe());
 
         JFrame application = new JFrame("Spotify Example");
         application.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
@@ -53,6 +54,6 @@
         viewManagerModel.firePropertyChanged();
 
         application.pack();
-        application.setVisible(true);
+        application.setVisible(true);*/
     }
 }
\ No newline at end of file
Index: src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.delete_playlist;\n\nimport interface_adapter.ViewModel;\nimport interface_adapter.homepage.HomepageViewModel;\n\npublic class DeletePlaylistViewModel extends ViewModel {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java b/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java
--- a/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/src/interface_adapter/delete_playlist/DeletePlaylistViewModel.java	(date 1700526015266)
@@ -3,5 +3,20 @@
 import interface_adapter.ViewModel;
 import interface_adapter.homepage.HomepageViewModel;
 
+import java.beans.PropertyChangeListener;
+
 public class DeletePlaylistViewModel extends ViewModel {
+    public DeletePlaylistViewModel(String viewName) {
+        super(viewName);
+    }
+
+    @Override
+    public void firePropertyChanged() {
+
+    }
+
+    @Override
+    public void addPropertyChangeListener(PropertyChangeListener listener) {
+
+    }
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>Spotify</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <dependencies>\n\n        <dependency>\n            <groupId>org.json</groupId>\n            <artifactId>json</artifactId>\n            <version>20230618</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.squareup.okhttp3</groupId>\n            <artifactId>okhttp</artifactId>\n            <version>4.10.0</version>\n        </dependency>\n\n    </dependencies>\n\n    <properties>\n        <maven.compiler.source>20</maven.compiler.source>\n        <maven.compiler.target>20</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 38b4c7835ade25ca738c997caf26488f2182b4a9)
+++ b/pom.xml	(date 1700531805693)
@@ -5,9 +5,26 @@
     <modelVersion>4.0.0</modelVersion>
 
     <groupId>org.example</groupId>
-    <artifactId>Spotify</artifactId>
+    <artifactId>SpotifyProject</artifactId>
     <version>1.0-SNAPSHOT</version>
 
+    <repositories>
+        <repository>
+            <id>jitpack.io</id>
+            <url>https://jitpack.io</url>
+        </repository>
+
+        <repository>
+            <id>central</id>
+            <name>Maven Central</name>
+            <layout>default</layout>
+            <url>https://repo1.maven.org/maven2</url>
+            <snapshots>
+                <enabled>false</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+
     <dependencies>
 
         <dependency>
@@ -15,12 +32,26 @@
             <artifactId>json</artifactId>
             <version>20230618</version>
         </dependency>
+
+        <!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
+        <dependency>
+            <groupId>com.googlecode.json-simple</groupId>
+            <artifactId>json-simple</artifactId>
+            <version>1.1.1</version>
+        </dependency>
 
         <dependency>
             <groupId>com.squareup.okhttp3</groupId>
             <artifactId>okhttp</artifactId>
             <version>4.10.0</version>
         </dependency>
+
+        <!-- https://mvnrepository.com/artifact/se.michaelthelin.spotify/spotify-web-api-java -->
+        <dependency>
+            <groupId>se.michaelthelin.spotify</groupId>
+            <artifactId>spotify-web-api-java</artifactId>
+            <version>8.3.4</version>
+        </dependency>
 
     </dependencies>
 
