Index: src/data_access/APIDataAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\n\nimport okhttp3.*;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Base64;\n\n//should I move this to SongOrganizer.java ?\npublic class APIDataAccessObject {\n    private static final String API_URL = \"https://api.spotify.com/v1\";\n    private static final String CLIENT_ID = System.getenv(\"CLIENT_ID\");\n    private static final String CLIENT_SECRET = System.getenv(\"CLIENT_SECRET\");\n\n    public static String getApiToken() {\n        //this SHOULD return an authorization token but IT'S NOT WORKING\n        OkHttpClient client = new OkHttpClient().newBuilder().build();\n        MediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\n        JSONObject requestBody = new JSONObject();\n        requestBody.put(\"grant-type\", \"client-credentials\");\n        RequestBody body = RequestBody.create(requestBody.toString(), mediaType);\n        Request request = new Request.Builder()\n                .url(\"https://accounts.spotify.com/api/token\")\n                .method(\"POST\", body)\n                .addHeader(\"Authorization\", \"Basic \" + Base64.getEncoder().encodeToString((CLIENT_ID + \":\" + CLIENT_SECRET).getBytes()))\n                .build();\n        try {\n            Response response = client.newCall(request).execute();\n            System.out.println(response);\n            if (response.code() == 200) {\n                JSONObject responseBody = new JSONObject(response.body().string());\n                return responseBody.getString(\"access_token\");\n            }\n            else {\n                throw new RuntimeException(\"Response not successful\");\n            }\n        }\n        catch (IOException | JSONException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public String createPlaylist(String userid) {\n        //TODO: possibly an option to save this new playlist to an internal file?\n        //creates a playlist under this userid\n        OkHttpClient client = new OkHttpClient().newBuilder().build();\n        MediaType mediaType = MediaType.parse(\"application/json\");\n        JSONObject requestBody = new JSONObject();\n        requestBody.put(\"A PlayList\", false); // false means it's a private playlist.\n        RequestBody body = RequestBody.create(requestBody.toString(), mediaType);\n        Request request = new Request.Builder()\n                .url(String.format(\"https://api.spotify.com/v1/users/%s/playlists\", userid))\n                .method(\"PUT\", body)\n                .addHeader(\"Authorization\", getApiToken())\n                .addHeader(\"Content-Type\", \"application/json\")\n                .build();\n        try {\n            Response response = client.newCall(request).execute();\n            System.out.println(response);\n            JSONObject responseBody = new JSONObject(response.body().string());\n            return responseBody.getString(\"name\");\n        } catch (IOException | JSONException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public String getMe() {\n        OkHttpClient client = new OkHttpClient().newBuilder()\n                .build();\n        Request request = new Request.Builder()\n                .url(\"https://api.spotify.com/v1/me\")\n                .addHeader(\"Authorization\", \"Bearer \" + getApiToken())\n                .build();\n        try {\n            Response response = client.newCall(request).execute();\n            System.out.println(response);\n            JSONObject responseBody = new JSONObject(response.body().string());\n            return responseBody.getString(\"display_name\");\n        }\n        catch (IOException | JSONException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n}\n
===================================================================
diff --git a/src/data_access/APIDataAccessObject.java b/src/data_access/APIDataAccessObject.java
--- a/src/data_access/APIDataAccessObject.java	
+++ b/src/data_access/APIDataAccessObject.java	
@@ -5,7 +5,6 @@
 import org.json.JSONObject;
 
 import java.io.IOException;
-import java.util.ArrayList;
 import java.util.Base64;
 
 //should I move this to SongOrganizer.java ?
